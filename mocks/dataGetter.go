package mocks

import (
	internal "github.com/lat1992/blockchain-data-aggregator/internal"
	"github.com/test-go/testify/mock"
)

// DataGetterService is an autogenerated mock type for the DataGetterService type
type DataGetterService struct {
	mock.Mock
}

// Channel provides a mock function with given fields:
func (_m *DataGetterService) Channel() chan internal.Record {
	ret := _m.Called()

	var r0 chan internal.Record
	if rf, ok := ret.Get(0).(func() chan internal.Record); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan internal.Record)
		}
	}

	return r0
}

// EndChannel provides a mock function with given fields:
func (_m *DataGetterService) EndChannel() chan bool {
	ret := _m.Called()

	var r0 chan bool
	if rf, ok := ret.Get(0).(func() chan bool); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(chan bool)
		}
	}

	return r0
}

// ReadDataFromFiles provides a mock function with given fields:
func (_m *DataGetterService) ReadDataFromFiles() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
